plugins {
    id 'fabric-loom' version "0.5-SNAPSHOT"
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version "1.3.72"
    id 'com.github.johnrengelman.shadow' version "5.2.0"
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileKotlin.kotlinOptions.jvmTarget = "1.8"
compileTestKotlin.kotlinOptions.jvmTarget = "1.8"

version project.version
group "com.github.hansi132.DiscordFab"
archivesBaseName = "discord_fab"

logger.lifecycle("""
    ==--==--====--==--====--==--====--==--====--==--==
    Building DiscordFab $project.version
    
    Fabric: 
        Minecraft: $project.minecraft_version
        Loader: $project.loader_version 
        Yarn: $project.yarn_mappings
    Dependencies:
        FabricAPI: $project.fabric_api_version
    ==--==--====--==--====--==--====--==--====--==--==
""")

minecraft {}

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
    maven {
        name = 'Fabric'
        url = 'https://maven.fabricmc.net/'
    }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }

    maven { url 'http://server.bbkr.space:8081/artifactory/libs-release' }
}

shadowJar {
    classifier = "shadow"
    configurations = [project.configurations.shadow]
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    //Fabric api
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_language_kotlin}"

    //Deprecated
    modImplementation 'com.github.OnBlock:KiloEssentials:v1.10'

    compile "net.luckperms:api:${project.luckperms_version}"

    compile group: 'net.dv8tion', name: 'JDA', version: "${project.jda_version}"
    shadow group: 'net.dv8tion', name: 'JDA', version: "${project.jda_version}"

    compile group: 'com.jagrosh', name: 'jda-utilities', version: "${project.jda_utilities_version}"
    shadow group: 'com.jagrosh', name: 'jda-utilities', version: "${project.jda_utilities_version}"

    implementation group: 'me.duncte123', name: 'botCommons', version: "${project.bot_commons}"
    shadow group: 'me.duncte123', name: 'botCommons', version: "${project.bot_commons}"

    compile group: 'ch.qos.logback', name: 'logback-classic', version: "${project.logback_version}"
    compile group: 'org.slf4j', name: 'slf4j-api', version: "${project.logback_version}"

    include group: 'mysql', name: 'mysql-connector-java', version: "${project.mysql_version}"
    compile group: 'mysql', name: 'mysql-connector-java', version: "${project.mysql_version}"

    compile group: 'club.minnced', name: 'discord-webhooks', version: "${project.discord_webhooks}"
    shadow group: 'club.minnced', name: 'discord-webhooks', version: "${project.discord_webhooks}"

    compile "org.spongepowered:configurate-hocon:${project.configurate_version}"
    shadow "org.spongepowered:configurate-hocon:${project.configurate_version}"
}

task remapJar(type: net.fabricmc.loom.task.RemapJarTask, overwrite: true) {
    from zipTree(shadowJar.archiveFile) dependsOn shadowJar
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version,
                "fabric_api": project.fabric_api_version,
                "minecraft": project.minecraft_version,
                "luckperms": project.luckperms_version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}
